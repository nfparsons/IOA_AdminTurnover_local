---
title: "Oregon Community-Based Care Administrative Turnover Study"
subtitle: "v4"
date: "`r Sys.Date()`"
format: 
  html: default
  docx: 
    toc: false
    number-sections: false
editor: source
execute: 
  echo: false
  warning: false
  error: false
always_allow_html: true
---

```{r}
#| label: packages

if (!require("pacman")) 
  install.packages("pacman", repos = "https://cran.rstudio.org")

## base packages
p_load(
  here, 
  conflicted, 
  scales, 
  skimr, 
  labelled
)

## interface packages
p_load(
  haven, 
  readxl, 
  RStata
)

## data manipulation
p_load(
  tidyverse, 
  janitor, 
  lubridate, 
  janitor,
  broom, 
  sjmisc
)

p_load_gh(
  "dr-JT/datawrangling", 
  "dr-JT/semoutput"
)

## modeling 
p_load(
  tidymodels, 
  psych, 
  doParallel, 
  doRNG,
  mice, 
  lavaan, 
  semTools
)

## tables
p_load(
  officer, 
  officedown,
  flextable, 
  mschart, 
  rvg, 
  gtsummary
)

## data viz
p_load(
  ggthemes,
  ggsci, 
  patchwork
)

here::i_am("_archive/here_anchor.R")
setwd(here())

conflict_prefer_all("dplyr", quiet = TRUE)

options(scipen = 9999)
options("RStata.StataPath" = "/Applications/Stata/StataSE.app/Contents/MacOS/stata-se")
options("RStata.StataVersion" = 17)
set.seed(13)

rm(list = ls())
```


**Create dataset**

```{r}
#| label: clean, assemble, and prep data
#| include: false
#| eval: false

## load survey data
### first read_dta loads and transforms completed surveys

dat.org <-
  read_dta("data/AdminTurnover_Survey_Data_012721_020221_USE_THIS.dta") |>
  select(-ends_with("_TEXT")) |>
  clean_names() |>
  rename_all(tolower) |>
  mutate(across(everything(), ~ str_trim(.)),
         across(everything(), ~ tolower(.))) |>
  na_if(-99) |>
  
  ## join turnover data
  left_join(
    read_excel(here("data", "AdTurn List 021622.xlsx")) |>
      ## clean up variable names
      clean_names() |>
      rename_all(tolower) |>
      mutate(
        across(everything(), ~ str_trim(.)),
        across(everything(), ~ tolower(.))
      ) |>
      select(
        ccmu1,
        firstname,
        lastname,
        check1,
        started,
        ended_100121,
        no_admin_record
      ),
    by = c(
      "ccmu" = "ccmu1",
      "firstname" = "firstname",
      "lastname" = "lastname"
    )
  ) |> 
  mutate(experience = str_replace(q16, "^$", NA_character_)) |> 
  mutate(experience = str_replace(q16, ".", NA_character_)) |>
  mutate(experience = str_replace(q16, "n/a", NA_character_)) |> 
  mutate(experience = str_replace(q16, "years all with mosaic", "")) |> 
  mutate(experience = str_replace(q16, "years", "")) |> 
  mutate(experience = str_replace(q16, "year", "")) |> 
  mutate(experience = str_replace(q16, "yrs", "")) |> 
  mutate(experience = str_replace(q16, "2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020", "20")) |> 
  mutate(experience = str_trim(experience)) |> 
  mutate(across(-c(id, ended_100121, no_admin_record), ~as.numeric(.))) |> 
  transmute(
    id = as.character(order012621), 
    resp = resp,
    no_admin_record = no_admin_record, 
    quit = case_when(is.na(ended_100121) ~ 0, 
                     !is.na(ended_100121) ~ 1, 
                     TRUE ~ NA_real_), 
    gender = case_when(q1 == 1 ~ 1, # Male
                   q1 == 2 ~ 2, # Female
                   q1 == 3 ~ NA_real_, # Prefer to self-describe
                   q1 == 4 ~ NA_real_, # Prefer not to answer
                   TRUE ~ NA_real_),
    age = case_when(
      q2 < 20 ~ 1,
      q2 >= 20 & q2 < 30 ~ 2,
      q2 >= 30 & q2 < 40 ~ 3,
      q2 >= 40 & q2 < 50 ~ 4,
      q2 >= 50 & q2 < 60 ~ 5,
      q2 >= 60 & q2 < 70 ~ 6,
      q2 >= 70 ~ 7,
      TRUE ~ NA_real_),
    race = case_when(q3_6 == 1 & is.na(q3_4) ~ 0, 
                     TRUE ~ 1), 
    education = q4,
    experience = case_when(experience < 10 ~ 1,
                           experience >= 10 & experience < 16 ~ 2, 
                           experience >= 16 & experience < 22 ~ 3, 
                           experience >= 22 ~ 4, 
                           TRUE ~ NA_real_), 
    salary = q17,
    anymc = anymc,
    catcap = case_when(
      catcap == 0 ~ 1,
      catcap == 1 ~ 2,
      catcap == 2 ~ 3,
      catcap == 3 ~ 4,
      TRUE ~ NA_real_
    ),
    medi = medi,
    rural = case_when(rural == 0 ~ 1,
                      rural == 1 ~ 2,
                      rural == 2 ~ 3,
                      TRUE ~ NA_real_),
    nonpro = nonpro,
    job_sat_security_01 = q19_1, 
    job_sat_compensation_01 = q19_2, 
    job_sat_growth_01 = q19_3, 
    job_sat_social_01 = q19_4, 
    job_sat_supervisory_01 = q19_5, 
    job_sat_growth_02 = q19_6, 
    job_sat_social_02 = q19_7, 
    job_sat_supervisory_02 = q19_8, 
    job_sat_compensation_02 = q19_9,
    job_sat_growth_03 = q19_10, 
    job_sat_security_02 = q19_11, 
    job_sat_social_03 = q19_12, 
    job_sat_growth_04 = q19_13, 
    job_sat_supervisory_03 = q19_14, 
    org_commit_affect_01 = q20_1, 
    org_support_01 = q20_2, 
    org_commit_affect_02 = q20_3, 
    org_support_02 = q20_4, 
    org_security_01 = q20_5, 
    org_commit_affect_03 = q20_6, 
    org_commit_norm_01 = q20_7, 
    org_support_03 = q20_8, 
    org_commit_norm_02 = q20_9, 
    org_security_02 = q20_10, 
    org_itq_01 = q20_11, 
    org_commit_contin_01 = q20_12, 
    org_commit_contin_02 = q20_13, 
    org_itq_02 = q20_14, 
    org_itq_03 = q20_15, 
    stress_time_01 = q26_1, 
    stress_time_02 = q26_2, 
    stress_time_03 = q26_3, 
    stress_time_04 = q26_4, 
    stress_time_05 = q26_5, 
    stress_anxiety_01 = q26_6, 
    stress_anxiety_02 = q26_7, 
    stress_anxiety_03 = q26_8, 
    stress_anxiety_04 = q26_9, 
    stress_anxiety_05 = q26_10
  )
  
wgt1 <- glm(resp ~ anymc + medi + catcap + rural + nonpro, 
            family = "binomial", 
            data = dat.org)

dat.org <- dat.org |> 
  mutate(pred = predict(wgt1, dat.org, type = "response")) |> 
  mutate(svy_weight = 1/pred)

write_rds(
  dat.org, 
  here("data", "AdTurn_clean.rds")
)

write_dta(
  dat.org , 
  here("data", "AdTurn_clean.dta")
)
```

- Initial sample of 525
- 203 respondents
- 15 respondents could not be connected to ODHS records
- Final sample of 188 respondents
- Sample weights calculated via logistic regression of facility characteristics against response rate


**Impute data**

```{r}
#| label: impute data
#| include: false
#| eval: false

rm(list = ls())

dat <- read_rds(here("data", "AdTurn_clean.rds")) |> 
  filter(resp == 1) |> 
  filter(is.na(no_admin_record))

## Detect core count
nCores <- min(parallel::detectCores(), 8)
## Used by parallel::mclapply() as default
options(mc.cores = nCores)
## Used by doParallel as default
options(cores = nCores)
## Register doParallel as the parallel backend with foreach
## http://stackoverflow.com/questions/28989855/the-difference-between-domc-and-doparallel-in-r
doParallel::registerDoParallel(cores = nCores)
## Report multicore use
cat("### Using", foreach::getDoParWorkers(), "cores\n")
cat("### Using", foreach::getDoParName(), "as backend\n")

dat.mi <- mice(dat, 
               meth = 'pmm', 
               m = 1, 
               maxit = 1, 
               print = FALSE)

dat.cmp <- complete(dat.mi, 1)

write_rds(dat.mi, here("data", "adTurn_imputed.rds"))
write_rds(dat.cmp, here("data", "adTurn_complete.rds"))
```

- Data were missing completely at random (0.295% (31)) and were imputed using predictive mean matching via multiple imputation by chained equations


```{r}
#| label: load data

rm(list = ls())

dat <- read_rds(here("data", "adTurn_complete.rds"))
```


------------------------------------------------------------------------

------------------------------------------------------------------------

# Demographic table

```{r}
#| label: demographic table

dat |> 
  select(quit, gender, age, race, education, experience, catcap, rural, anymc, medi, nonpro) |> 
  set_variable_labels(gender = "Gender", 
                      age = "Age", 
                      race = "Race", 
                      education = "Education", 
                      experience = "Years experience", 
                      catcap = "Facility capacity", 
                      rural = "Facility locale", 
                      anymc = "Memory Care services", 
                      medi = "Medicaid acceptance", 
                      nonpro = "Non-profit status") |> 
  add_value_labels(
    quit = c("Didn't quit" = 0, "Quit" = 1), 
    anymc = c("No memory care" = 0, "Memory care" = 1), 
    medi = c("No Medicaid" = 0, "Medicaid" = 1), 
    nonpro = c("For profit" = 0, "Non-profit" = 1), 
    catcap = c("Small (6-24)" = 1, "Medium (25-49)" = 2, "Large (50-74)" = 3, "Very large (75+)" = 4), 
    rural = c("Urban" = 1, "Rural" = 2, "Frontier" = 3), 
    gender = c("Male" = 1, "Female" = 2), 
    age = c("<20 years old" = 1, "20-29 years old" = 2, "30-39 years old" = 3, "40-49 years old" = 4, 
           "50-59 years old" = 5, "60-69 years old" = 6, ">=70 years old" = 7), 
    race = c("White, non-Hispanic" = 0, "Not White, non-Hispanic" = 1), 
    education = c("High school diploma or equiv." = 1, "Some college credit" = 2, "Associate's degree" = 3, 
           "Bachelor's degree" = 4, "Master's degree" = 5, "Professional degree" = 6, "Doctoral degree" = 7), 
    experience = c("< 10 years" = 1, "10-16 years" = 2, "16-22 years" = 3, "> 22 years" = 4)
  ) |> 
  mutate(across(everything(), ~ labelled::to_factor(.))) |> 
  tbl_summary(by = quit, 
              missing_text = "(Missing)") |> 
  add_overall() |> 
  add_difference() |> 
  add_p()
```


------------------------------------------------------------------------

------------------------------------------------------------------------

# CFA {.tabset .tabset-pills}

See the [lavaan Tutorial](https://lavaan.ugent.be/tutorial/index.html){target="_blank"} for model syntax

```{r warning=FALSE}
#| label: cfa

################################################################################
## define the models

## Satisfaction with job security: q19_cfa1
## Satisfaction with compensation: q19_cfa2
## Growth satisfaction: q19_cfa3
## Social satisfaction: q19_cfa4
## Supervisory satisfaction: q19_cfa5

q19.path <- '
cfa_job_sat_security = ~ job_sat_security_01 + job_sat_security_02 
cfa_job_sat_compensation = ~ job_sat_compensation_01 + job_sat_compensation_02 
cfa_job_sat_growth = ~ job_sat_growth_01 + job_sat_growth_02 + job_sat_growth_03 + job_sat_growth_04
cfa_job_sat_social = ~ job_sat_social_01 + job_sat_social_02 + job_sat_social_03
cfa_job_sat_supervisory = ~ job_sat_supervisory_01 + job_sat_supervisory_02 + job_sat_supervisory_03
'

## Organizational commitment: q20_cfa1
## Perceived organizational support: q20_cfa2
## Perceived job security: q20_cfa3
## Intent to quit: q20_cfa4

q20.path <- '
cfa_org_commit = ~ org_commit_affect_01 + org_commit_affect_02 + org_commit_affect_03 + org_commit_norm_01 + org_commit_norm_02 + org_commit_contin_01 + org_commit_contin_02
cfa_org_support = ~ org_support_01 + org_support_02 + org_support_03
cfa_org_security = ~ org_security_01 + org_security_02
cfa_org_itq = ~ org_itq_01 + org_itq_02 + org_itq_03
'

## Time stress scale: q26_cfa1
## Anxiety scale: q26_cfa2
q26.path <- '
cfa_stress_time =~ stress_time_01 + stress_time_02 + stress_time_03 + stress_time_04 + stress_time_05 
cfa_stress_anxiety =~ stress_anxiety_01 + stress_anxiety_02 + stress_anxiety_03 + stress_anxiety_04 + stress_anxiety_05
'

################################################################################
## fit the confirmatory factor analyses

q19.cfa <- cfa(q19.path, data = dat)

q20.cfa <- cfa(q20.path, data = dat)

q26.cfa <- cfa(q26.path, data = dat)

################################################################################
## examine the confirmatory factor analyses

sem_tables(q19.cfa)

sem_tables(q20.cfa)

sem_tables(q26.cfa)

################################################################################
## add CFA variables to dataset

dat <- dat |> 
  cbind(lavPredict(q19.cfa)) |> 
  cbind(lavPredict(q20.cfa)) |> 
  cbind(lavPredict(q26.cfa))

################################################################################
## clean up

rm(q19.path, q20.path, q26.path)
```


**Exploratory Factor Analysis**

```{r}
#| label: efa

################################################################################
## generate correlation matrices

q19.cor <- dat |> 
  select(starts_with("job_sat_")) |> 
  cor()

q20.cor <- dat |> 
  select(starts_with("org_")) |> 
  cor()

q26.cor <- dat |> 
  select(starts_with("stress_")) |> 
  cor()

################################################################################
## estimate the indicated number of factors

q19.fact <- fa.parallel(q19.cor, n.obs = nrow(dat), fa = "both", plot = FALSE)

q20.fact <- fa.parallel(q20.cor, n.obs = nrow(dat), fa = "both", plot = FALSE)

q26.fact <- fa.parallel(q26.cor, n.obs = nrow(dat), fa = "both", plot = FALSE)

################################################################################
## perform the efas

q19.efa <- factanal(dat |> select(starts_with("job_sat_")), 
                    factors = q19.fact$nfact, 
                    rotation = "promax")

q20.efa <- factanal(dat |> select(starts_with("org_")), 
                    factors = q20.fact$nfact, 
                    rotation = "promax")

q26.efa <- factanal(dat |> select(starts_with("stress_")), 
                    factors = q26.fact$nfact, 
                    rotation = "promax")

################################################################################
## examine the factor scores

q19.efa

q20.efa

q26.efa

################################################################################
## extract the factor scores

q19.efa.scores <- factor.scores(dat |> select(starts_with("job_sat_")), q19.efa) |>
  pluck(1) |> 
  as_tibble() |> 
  rename("efa_job_sat_factor_01" = Factor1,
      "efa_job_sat_factor_02" = Factor2,
      "efa_job_sat_factor_03" = Factor3
    )

q20.efa.scores <- factor.scores(dat |> select(starts_with("org_")), q20.efa) |>
  pluck(1) |> 
  as_tibble() |> 
  rename("efa_org_factor_01" = Factor1,
      "efa_org_factor_02" = Factor2,
      "efa_org_factor_03" = Factor3
    )

q26.efa.scores <- factor.scores(dat |> select(starts_with("stress_")), q26.efa) |>
  pluck(1) |> 
  as_tibble() |> 
  rename("efa_stress_factor_01" = Factor1,
      "efa_stress_factor_02" = Factor2
    )

################################################################################
## add EFA variables to dataset

dat <- dat |> 
  cbind(q19.efa.scores) |> 
  cbind(q20.efa.scores) |> 
  cbind(q26.efa.scores)

################################################################################
## clean up

rm(q19.cor, q19.fact, q19.efa.scores, q20.cor, q20.fact, q20.efa.scores, q26.cor, q26.fact, q26.efa.scores)
```


```{r}
#| label: cfa correlations
#| 
map(
  dat |>
    select(
      -starts_with("job_sat_"),-starts_with("org_"),-starts_with("stress_"),-starts_with("efa_"),-id,
      -resp,
      -no_admin_record,
      -pred,
      -quit,-svy_weight
    ),
  cor.test,
  y = dat$quit
) |>
  map_dfr(tidy, .id = "predictor") |>
  mutate(sig = case_when(p.value <= 0.05 ~ "Significant",
                         TRUE ~ "Not significant")) |>
  ggplot(aes(x = fct_reorder(predictor, estimate))) +
  geom_point(aes(y = estimate, color = sig)) +
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high, color = sig), width = .1) +
  labs(title = "Correlation: CFA & quit status",
       x = NULL, y = NULL) +
  scale_color_manual(name = "p Value",
                     values = c("gray", "red")) +
  theme(axis.text.x = element_text(
    angle = 90,
    vjust = 0.5,
    hjust = 1
  )) 
```


```{r}
#| label: efa correlations

map(
  dat |>
    select(
      -starts_with("job_sat_"),-starts_with("org_"),-starts_with("stress_"),-starts_with("cfa_"),-id,
      -resp,
      -no_admin_record,
      -pred,
      -quit,-svy_weight
    ),
  cor.test,
  y = dat$quit
) |>
  map_dfr(tidy, .id = "predictor") |>
  mutate(sig = case_when(p.value <= 0.05 ~ "Significant",
                         TRUE ~ "Not significant")) |>
  ggplot(aes(x = fct_reorder(predictor, estimate))) +
  geom_point(aes(y = estimate, color = sig)) +
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high, color = sig), width = .1) +
  labs(title = "Correlation: EFA & quit status",
       x = NULL, y = NULL) +
  scale_color_manual(name = "p Value",
                     values = c("gray", "red")) +
  theme(axis.text.x = element_text(
    angle = 90,
    vjust = 0.5,
    hjust = 1
  )) 
```










**Appendix A - CFA indices**

```{r eval=FALSE}
#| label: Appendix A - CFA hacking
#| include: false
#| eval: false

## examine the model
## summary(q19.cfa, fit.measures = TRUE)
## modindices(q19.cfa, sort = TRUE, maximum.number=10)

rm(list = ls())

dat.cmp <- read_rds(here("data", "adTurn_complete.rds")) 

################################################################################
## define the models

## Satisfaction with job security: q19_cfa1
## Satisfaction with compensation: q19_cfa2
## Growth satisfaction: q19_cfa3
## Social satisfaction: q19_cfa4
## Supervisory satisfaction: q19_cfa5

q19.path <- '
job_sat_security = ~ job_sat_security_01 + job_sat_security_02 
job_sat_compensation = ~ job_sat_compensation_01 + job_sat_compensation_02 
job_sat_growth = ~ job_sat_growth_01 + job_sat_growth_02 + job_sat_growth_03 + job_sat_growth_04
job_sat_social = ~ job_sat_social_01 + job_sat_social_02 + job_sat_social_03
job_sat_supervisory = ~ job_sat_supervisory_01 + job_sat_supervisory_02 + job_sat_supervisory_03
'

## Organizational commitment: q20_cfa1
## Perceived organizational support: q20_cfa2
## Perceived job security: q20_cfa3
## Intent to quit: q20_cfa4

q20.path <- '
org_commit = ~ org_commit_affect_01 + org_commit_affect_02 + org_commit_affect_03 + org_commit_norm_01 + org_commit_norm_02 + org_commit_contin_01 + org_commit_contin_02
org_support = ~ org_support_01 + org_support_02 + org_support_03
org_security = ~ org_security_01 + org_security_02
org_itq = ~ org_itq_01 + org_itq_02 + org_itq_03
'

## Time stress scale: q26_cfa1
## Anxiety scale: q26_cfa2
q26.path <- '
stress_time =~ stress_time_01 + stress_time_02 + stress_time_03 + stress_time_04 + stress_time_05 
stress_anxiety =~ stress_anxiety_01 + stress_anxiety_02 + stress_anxiety_03 + stress_anxiety_04 + stress_anxiety_05
'

################################################################################
## fit the confirmatory factor analyses

q19.cfa <- cfa(q19.path, data = dat.cmp)

q20.cfa <- cfa(q20.path, data = dat.cmp)

q26.cfa <- cfa(q26.path, data = dat.cmp)

################################################################################
## diagnose cfa fit

summary(q19.cfa, fit.measures = TRUE)

modindices(q19.cfa, sort = TRUE, maximum.number = 10)
```
















